@using DeltaQrCode.HelpersAndExtensions
@using System.Security.Claims
@model DeltaQrCode.ViewModels.HotelListViewModel


<div class="row justify-content-center">
    <div class="col-auto">
        <table class="table table-responsive table-sm table-responsive-md table-responsive-sm table-bordered table-hover">
            <thead>
                <tr class="text-center">
                    <th style="" scope="col">Actiune</th>
                    <th scope="col">Client/Flota</th>
                    <th scope="col">Nr. Telefon</th>
                    <th scope="col">Nr. Auto</th>
                    <th scope="col">Serie Sasiu</th>
                    <th scope="col">Set</th>

                    <th style="min-width:100px;" scope="col">Poz</th>
                    @*<th scope="col">Status Curent</th>*@
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.List)
                {
                    <tr class="text-center">
                        <td class="flex-row">
                            <div class="col-md-12">
                                <div class="btn btn-outline-info btn-sm actionButton" type="button" data-value="@item.SetAnvelope.Id" data-actionType="info"><i class="fas fa-info-circle "></i></div>
                            </div>
                            <div class="col-md-12">
                                @{
                                    var parms = new Dictionary<string, string>
                                {
                { "Id", item.SetAnvelope.Id },
                { "actionType", "edit" }
            };
                                }

                                <a class="btn btn-outline-warning btn-sm actionButton" type="button" asp-action="EditSetAnv" asp-controller="Hotel" asp-route-id="@item.SetAnvelope.Id" asp-route-actionType="edit"><i class="fas fa-pencil-alt"></i></a>
                            </div>
                            @if (User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.Role)?.Value == "admin")
                            {
                                <div class="col-md-12">
                                    <div class="btn btn-outline-danger btn-sm deleteButton" type="button" data-value="@item.SetAnvelope.Id"><i class="fas fa-trash-alt"></i></div>
                                </div>
                            }
                        </td>
                        <td>@item.Client.NumeClient</td>
                        <td>@item.Client.NumarTelefon</td>
                        <td>@item.Masina.NumarInmatriculare</td>
                        <td>@item.Masina.SerieSasiu</td>
                        <td>@item.SetAnvelope.NumeSet</td>
                        <td style="white-space:pre-line" ;>@item.SetAnvelope.PozitieSet</td>
                        @*@{
                                string color = "#ff4242";
                                if (item.Anvelopa.StatusCurent == StatusAnvelope.InRaft.ToDisplayString())
                                {
                                    color = "lightgreen";
                                }
                                else if (item.Anvelopa.StatusCurent == StatusAnvelope.Montate.ToDisplayString())
                                {
                                    color = "yellow";
                                }
                                else if (item.Anvelopa.StatusCurent == StatusAnvelope.Predate.ToDisplayString())
                                {
                                    color = "#ff7b42";
                                }
                                <td style="background-color: @color">
                                    @item.Anvelopa.StatusCurent
                                </td>
                            }*@
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<div hidden="hidden" id="hasPrev" data-value="@Model.List.HasPreviousPage.ToString().ToLower()"></div>
<div hidden="hidden" id="hasNext" data-value="@Model.List.HasNextPage.ToString().ToLower()"></div>


<div class="text-center">
    <button id="buttonPrev" data-pageNumber="@(Model.List.PageIndex - 1)"
            class=" customPagination btn btn-default">
        Previous
    </button>
    <button id="buttonNext" data-pageNumber="@(Model.List.PageIndex + 1)"
            class=" customPagination btn btn-default">
        Next
    </button>
</div>



