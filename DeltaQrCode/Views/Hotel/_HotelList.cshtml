
@using DeltaQrCode.HelpersAndExtensions
@model DeltaQrCode.ViewModels.HotelListViewModel



<table class="table">
    <thead>
        <tr class="text-center">
            <th style="min-width:130px;" scope="col">Actiune</th>
            <th scope="col">Nr. Auto</th>
            <th scope="col">Client</th>
            <th scope="col">Nr. Telefon</th>
            <th scope="col">Flota</th>
            <th scope="col">Marca</th>
            <th scope="col">Nr.Buc</th>
            <th scope="col">Dimensiuni</th>
            <th scope="col">Uzura</th>
            <th scope="col">Tip</th>
            <th scope="col">Observatii</th>
            <th scope="col">Poz</th>
            <th scope="col">Status Curent</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.List)
        {
            <tr class="text-center">
                <td>
                    <div class="btn btn-outline-info btn-sm actionButton" type="button" data-value="@item.Id" data-actionType="info"><i class="fas fa-info-circle"></i></div>
                    <div class="btn btn-outline-warning btn-sm actionButton" type="button" data-value="@item.Id" data-actionType="edit"><i class="far fa-edit"></i></div>
                    <div class="btn btn-outline-danger btn-sm deleteButton" type="button" data-value="@item.Id"><i class="fas fa-trash-alt"></i></div>
                </td>
                <td >@item.NumarInmatriculare</td>
                <td>@item.NumeClient</td>
                <td>@item.NumarTelefon</td>
                <td>@item.Flota</td>
                <td>@item.Marca</td>
                <td>@item.NrBucati</td>
                <td>@item.Dimensiuni.ToCustomString()</td>
                <td>@item.Uzura.ToCustomString()</td>
                <td>@item.TipSezon</td>
                <td>@item.Observatii</td>
                <td>@item.Position?.PositionString</td>
                @{
                    string color = "red";
                    if (item.StatusCurent == StatusAnvelope.InRaft.ToDisplayString())
                    {
                        color = "lightgreen";
                    }
                    else if (item.StatusCurent == StatusAnvelope.Montate.ToDisplayString())
                    {
                        color = "yellow";
                    }else if(item.StatusCurent == StatusAnvelope.Predate.ToDisplayString())
                    {
                        color = "tomato";
                    }
                    <td style="background-color: @color">
                        @item.StatusCurent
                    </td>
                }
            </tr>
        }
    </tbody>
</table>


<div hidden="hidden" id="hasPrev" data-value="@Model.List.HasPreviousPage.ToString().ToLower()"></div>
<div hidden="hidden" id="hasNext" data-value="@Model.List.HasNextPage.ToString().ToLower()"></div>


<div class="text-center">
    <button id="buttonPrev" data-pageNumber="@(Model.List.PageIndex - 1)"
            class=" customPagination btn btn-default">
        Previous
    </button>
    <button id="buttonNext" data-pageNumber="@(Model.List.PageIndex + 1)"
            class=" customPagination btn btn-default">
        Next
    </button>
</div>



