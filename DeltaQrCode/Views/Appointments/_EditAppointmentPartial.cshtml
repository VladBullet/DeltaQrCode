@using DeltaQrCode.ModelsDto
@using Microsoft.AspNetCore.Razor.TagHelpers
@model DeltaQrCode.ViewModels.Appointments.AppointmentVM

<style>
    .modal-min-height {
        min-height: 450px;
    }

    .required-field::before {
        content: "*";
    }

    .margin150left {
        margin-left: 150px;
    }
</style>

<input id="apptIdForGetSpans" hidden="hidden" data-value="@Model.Id" />
<input id="defaultServiciu" hidden="hidden" data-value="@Model.Serviciu" />
<input id="defaultDurata" hidden="hidden" data-value="@Model.DurataInMinute" />
<div class="modal-header">
    <h3 id="myModalLabel">Editeaza programarea</h3>
    <button type="button" class="close float-right" data-dismiss="modal" aria-hidden="true">×</button>
</div>
<div>
    <form id="apptform" method="post">
        @Html.AntiForgeryToken()
        <div class="modal-body modal-min-height" id="apptModalBody">

            <div class="form-group">

                <input id="AppointmentId" hidden="hidden" asp-for="Id" />
                <input id="ConfirmedCode" hidden="hidden" asp-for="ConfirmedCode" />
                <input id="ConfirmedModel" hidden="hidden" asp-for="Confirmed" />
                <input id="ConfirmedDate" hidden="hidden" asp-for="ConfirmedDate" />
                <input id="ChangedByClient" hidden="hidden" asp-for="ChangedByClient" />
            </div>
            <span id="availableHourSpan"> </span>

            <div class="form-group">
                <h6 style="margin-left:20px;">Data programare</h6>
                <div class="col-md-6">
                    <input id="datepickerModal" asp-for="DataAppointment" type="text" class="form-control changeable changeableDateTimeRamp" placeholder="Selecteaza data" />
                </div>
            </div>
            <div class="form-group form-inline">
                <label class="form-check-label col-md-3 required-field">Ora</label>
                <div class="col-md-9">
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.StartTime_Hour, ViewData["hours"] as SelectList, new { @class = "form-control changeable changeableDateTimeRamp" })
                        @*<input id="StartTime_Hour" type="number" class="form-control changeable" asp-for="StartTime_Hour" />*@
                    </div>
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.StartTime_Minutes, ViewData["minutes"] as SelectList, new { @class = "form-control changeable changeableDateTimeRamp" })
                        @*<input id="StartTime_Minutes" type="number" class="form-control changeable" asp-for="StartTime_Minutes" />*@
                    </div>

                    @Html.ValidationMessageFor(model => model.StartTime_Hour, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.StartTime_Minutes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6 col-sm-4">
                    @Html.LabelFor(model => model.DurataInMinute, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                    <div class="col-md-9">
                        <input id="durataValue" class="changeable changeableDateTimeRamp" hidden="hidden" data-value="@Model.DurataInMinute" />
                        <input id="selectieBunaElem" hidden="hidden" value="false" />
                        <select class="form-control" id="Durata" asp-for="DurataInMinute" data-placeholder="@Model.DurataInMinute" value="@Model.DurataInMinute"></select>
                        @Html.ValidationMessageFor(model => model.DurataInMinute, "", new { @class = "text-danger error_span" })
                    </div>
                </div>

                <div class="form-group col-md-6 col-sm-4">
                    @Html.LabelFor(model => model.Serviciu, htmlAttributes: new { @class = "control-label col-md-3 required-field", @id = "serviciuLabel", @name = "serviciuLabel" })
                    <div class="col-md-9">
                        <select id="serviciu" class="changeable" asp-for="Serviciu" data-placeholder="@Model.Serviciu" value="@Model.Serviciu"></select>

                        @Html.ValidationMessageFor(model => model.Serviciu, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3 required-field">Rampa</label>
                <div class="col-md-9">

                    <input id="RampId" class="changeable form-control col-md-2 validate" type="text" asp-for="RampId" />
                    @Html.ValidationMessageFor(model => model.RampId, "", new { @class = "text-danger error_span" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.NumarInmatriculare, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.NumarInmatriculare, new { htmlAttributes = new { @class = "form-control half-margin-bottom validate changeable" } })
                    @Html.ValidationMessageFor(model => model.NumarInmatriculare, "", new { @class = "text-danger error_span" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeClient, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.NumeClient, new { htmlAttributes = new { @class = "form-control half-margin-bottom validate changeable" } })
                    @Html.ValidationMessageFor(model => model.NumeClient, "", new { @class = "text-danger error_span" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.NumarTelefon, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.NumarTelefon, new { htmlAttributes = new { @class = "form-control half-margin-bottom validate changeable" } })
                    @Html.ValidationMessageFor(model => model.NumarTelefon, "", new { @class = "text-danger error_span" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EmailClient, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.EmailClient, new { htmlAttributes = new { @class = "form-control half-margin-bottom validate changeable" } })
                    @Html.ValidationMessageFor(model => model.EmailClient, "", new { @class = "text-danger error_span" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Observatii, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Observatii, 3, 40, new { htmlAttributes = new { @class = "form-control half-margin-bottom changeable" } })
                    @Html.ValidationMessageFor(model => model.Observatii, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-inline">
                @Html.LabelFor(model => model.Confirmed, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9 form-inline">
                    <input type="checkbox" id="Confirmed" checked="@Model.Confirmed" class="form-check-input" hidden />
                    <div class="">
                        @{if (Model.Confirmed)
                            {


                                <i class="text-success far fa-check-circle fa-2x"></i>
                            }
                            else
                            {
                                <i class="text-danger far fa-times-circle fa-2x"></i>
                            }
                        }
                    </div>
                </div>
            </div>

        </div>

        <div>
            <p id="serverErrorMsg" style="color:red; padding: 5px;"></p>
        </div>


        <div class="modal-footer">
            <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Inchide</button>
            <button class="btn btn-outline-success btn-ok" id="apptsEditButton">Salveaza</button>
        </div>
    </form>

</div>
<script type="text/javascript" src="~/js/select2AddEditAppt.js"></script>