@using System.Security.Cryptography.X509Certificates
@model DeltaQrCode.ViewModels.Scheduler.CalendarVm

@{
    ViewBag.Title = "Calendar";
}
<head>
    <link href="~/css/SchedulerIndexStyle.css" rel="stylesheet" />
    <script type="text/javascript" src="https://cdn.rawgit.com/asvd/dragscroll/master/dragscroll.js"></script>
</head>

<div class="container">
    <div class="form-row">

        <div class="form-group col-md-4">
            <label class="col-form-label"></label>
            <input id="datepicker" class="form-control" placeholder="Selecteaza data" />
            <span class="text-danger"></span>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div> Rampa 1</div>
            <div class="date-control-container">

                <div class="hour-container">
                    <div>
                        @for (int i = 8; i < 18; i++)
                        {
                            <div id="hour@(i)" class="hour">
                                <div class="hourText">@i:00</div>
                            </div>
                            string breaktime = i == 12 ? "hour-red" : "";
                            <div id="hour@(i):30" class="hour @breaktime">
                                <div class="hourText">@i:30</div>
                            </div>
                        }
                        <div id="hour20" class="hour">
                            <div class="hourText">18:00</div>
                        </div>
                        <div style="height: auto; width: auto; background-color: lightgray;"></div>
                    </div>
                </div>


            </div>
        </div>

    </div>
</div>
<!--  this is the modal dialog that will house the partial content-->
<div id="myApptModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="partialInfo"></div>
        </div>
    </div>
</div>


@section Scripts{

    <script type="text/javascript">
        $(document).ready(function() {
                //$("#datepicker").datepicker();
                $("#datepicker").datepicker({ dateFormat: "yy-mm-dd" }).datepicker("setDate", new Date());
        });

        $(function() {

            // Clear the existing appts.
            $('.appt-no-height').remove();

            var scrollToWorkingHours = function() {
                $('.hour-container').animate({ scrollTop: '125px' }, 'slow');
            };

            /* Enables scrolling to a set position  scrollToId('.hour-container', '#hour4');*/
            var scrollToId = function(scrollContainer, aid) {
                var aTag = $(aid);
                $(scrollContainer).animate({ scrollTop: aTag.offset().top }, 'slow');
            };

            /* Get the value from the professional ddl*/
            var getSelectedProfessionalId = function() {
                var professionalIdForAppts = $('#ddlProfessional').find(":selected").val();
                return professionalIdForAppts;
            }

            var clearAppointments = function() {
                // Clear the existing appts.
                $('.appt-no-height').remove();
            };

            var apptNewModalDialog = function(startDate, startHour) {
                var professionalId = getSelectedProfessionalId();

                var url = "/Scheduler/EditModalNew"; // the url to the controller
                $.get(url + '?startDateStr=' + startDate + '&startHour=' + startHour + '&professionalId=' + professionalId,
                    function(data) {
                        $('#partialInfo').html(data);
                        $('#myApptModal').modal('show');
                    });
            };

            var apptEditModalDialog = function(id) {

                var professionalIdForAppts = getSelectedProfessionalId();

                var url = "/Scheduler/EditModal"; // the url to the controller
                $.get(url + '?id=' + id + '&professionalId=' + professionalIdForAppts,
                    function(data) {
                        $('#partialInfo').html(data);
                        $('#myApptModal').modal('show');
                    });
            };

            var showAppointmentsForDate = function(calendarDate) {

                // Get the selectedvalue of the dropdown
                var professionalIdForAppts = getSelectedProfessionalId();

                $.get('@Url.Action("GetAppointmentsForDate", "Scheduler")',
                    { apptDate: calendarDate, professionalId: professionalIdForAppts },
                    function(data) {

                        clearAppointments();

                        // Settings
                        var marginLeftPerItem = 20;
                        var oneHourPxHeight = 30;

                        var oneMinutePxHeight = oneHourPxHeight / 60;

                        // Add appts in the right position
                        for (var i = 0; i < data.length; i++) {
                            var row = data[i];
                            var apptRow = $('#hour' + row.StartTime_Hour);

                            var minutesText = row.StartTime_Minutes === 0 ? '00' : row.StartTime_Minutes;

                            apptRow.append('<div id="appt' +
                                row.AppointmentId +
                                '" class="appt-no-height">' +
                                row.StartTime_Hour +
                                ":" +
                                minutesText +
                                ' (' +
                                row.DurationInMinutes +
                                'm)' +
                                '&nbsp;' +
                                row.Forename +
                                ' ' +
                                row.Surname +
                                ' (' +
                                row.AppointmentTypeAsDisplay +
                                ')</div>');

                            var objHeight = (row.DurationInMinutes * oneMinutePxHeight) + 'px';
                            var marginTop = (row.StartTime_Minutes * oneMinutePxHeight) + 'px';
                            var marginLeft = ((apptRow.children().length - 1) * marginLeftPerItem) + 'px';

                            var thisAppt = $("#appt" + row.AppointmentId);
                            thisAppt.css("height", objHeight);
                            thisAppt.css("margin-top", marginTop);
                            thisAppt.css("margin-left", marginLeft);

                            //default color is silver on appt-no-height.
                            switch (row.AppointmentType) {
                            case 2:
                                thisAppt.css("background-color", 'lightblue');
                                break;
                            case 1024:
                                thisAppt.css("background-color", 'lightgreen');
                                break;
                            default:
                                // do nothing.
                                break;
                            }


                        }

                        /* click event for editing an appt*/
                        $('.appt-no-height').on('click',
                            function(event) {
                                // dont allow the event to propagate to hour click.
                                event.stopPropagation();
                                var fullId = this.id.replace('appt', '');
                                apptEditModalDialog(fullId);
                            });

                        /* scroll to a better position */
                        scrollToWorkingHours();
                    });
            };


            /* click event on the hour */
            $('.hour').on('click',
                function(elm) {
                    var startHourOnly = this.id.replace('hour', '');
                    var startHour = parseInt(startHourOnly);

                    var selectedDateDiv = $('.date-selected');

                    // Make the modal here!
                    apptNewModalDialog(selectedDateDiv[0].innerText, startHour);
                });


            /* Get the appointments for whatever date is selected */
            var getAppointmentsForSelectedDate = function() {
                var selectedDateDiv = $('.date-selected');
                var parts = selectedDateDiv[0].innerText.split('/');
                showAppointmentsForDate(parts[2] + '-' + parts[1] + '-' + parts[0]);
            }


            // initial data load.
            window.setTimeout(function() {
                    getAppointmentsForSelectedDate();
                },
                1000);

            $("#ddlProfessional").on("change",
                function() {
                    clearAppointments();
                    getAppointmentsForSelectedDate();
                });


            /* Dates ensure clicked, not dragged! */
            var $dateControl = $('.date');
            $dateControl.on('mousedown',
                function(evt) {
                    $dateControl.on('mouseup mousemove',
                        function handler(evt) {
                            if (evt.type === 'mouseup') {
                                // click
                                $('.date').removeClass('date-selected');

                                $(evt.currentTarget).addClass('date-selected');
                                showAppointmentsForDate(evt.currentTarget.innerHTML);
                            } else {
                                // drag
                            }
                            $dateControl.off('mouseup mousemove', handler);
                        });
                });


            /* on load, scroll to a sensible hour */
            scrollToWorkingHours();


            /*end page load*/
        });
    </script>

}

