@using DeltaQrCode.ModelsDto
@using Microsoft.AspNetCore.Razor.TagHelpers
@model DeltaQrCode.ViewModels.Scheduler.AppointmentModalVm

<style>
    .modal-min-height {
        min-height: 450px;
    }

    .required-field::before {
        content: "*";
    }

    .margin150left {
        margin-left: 150px;
    }
</style>

<div class="modal-header">
    <h3 id="myModalLabel">@(Model.CreateOrEdit == CreateOrEdit.Create ? "Create Appointment" : "Edit Appointment")</h3>
    <button type="button" class="close float-right" data-dismiss="modal" aria-hidden="true">×</button>
</div>
<div>
    @using (Html.BeginForm("EditModal", "Scheduler", FormMethod.Post, new { @id = "apptform" }))
    {
        @*@Html.ValidationSummary()*@
        @Html.AntiForgeryToken()
        <div class="modal-body modal-min-height">

            @* @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
            @*@Html.HiddenFor(model => model.Appointment.AppointmentId)
                @Html.HiddenFor(model => model.Appointment.AppointmentIndex)*@
            @*@Html.HiddenFor(model => model.Appointment.StartTime)*@

            <div class="form-group">
            </div>

            <div class="form-group">
                @* @Html.LabelFor(model => model.Appointment.StartTime_Date, htmlAttributes: new { @class = "col-md-3 required-field" })*@
                <div class="col-md-9">
                    <input id="datepickerModal" type="text" class="form-control" placeholder="Selecteaza data" />
                    @*@Html.EditorFor(model => model.Appointment.StartTime_Date, new{ @id="datepickerModal",@class="form-control"})*@
                    @*@Html.ValidationMessageFor(model => model.Appointment.StartTime_Date, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3 required-field">Time</label>
                <div class="col-md-9">
                    <div class="inline-block width100 half-margin-bottom">
                        @* @Html.EditorFor(model => model.Appointment.StartTime_Hour, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="number" class="form-control" asp-for="Appointment.StartTime_Hour" />
                    </div>
                    <div class="inline-block width100">
                        @*                        @Html.EditorFor(model => model.Appointment.StartTime_Minutes, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="number" class="form-control" asp-for="Appointment.StartTime_Minutes" />
                    </div>

                    @Html.ValidationMessageFor(model => model.Appointment.StartTime_Hour, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Appointment.StartTime_Minutes, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.DurationInMinutes, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    @*@Html.EditorFor(model => model.Appointment.DurationInMinutes, new { htmlAttributes = new { @class = "form-control width100 half-margin-bottom" } })*@
                    <input type="number" class="form-control" asp-for="Appointment.DurationInMinutes" />
                    @Html.ValidationMessageFor(model => model.Appointment.DurationInMinutes, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.AppointmentType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-9">
                        @Html.EnumDropDownListFor(
                            x => x.AppointmentType,
                            "Select",
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AppointmentType, "", new { @class = "text-danger" })
                    </div>
                </div>*@



            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.AppointmentType, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    <select asp-for="Appointment.AppointmentType" asp-items="Html.GetEnumSelectList(typeof (AppointmentType))"></select>

                    @Html.ValidationMessageFor(model => model.Appointment.AppointmentType, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.NrMasina, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Appointment.NrMasina, new { htmlAttributes = new { @class = "form-control half-margin-bottom" } })
                    @Html.ValidationMessageFor(model => model.Appointment.NrMasina, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.NumeClient, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Appointment.NumeClient, new { htmlAttributes = new { @class = "form-control half-margin-bottom" } })
                    @Html.ValidationMessageFor(model => model.Appointment.NumeClient, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3 required-field" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Appointment.PhoneNumber, new { htmlAttributes = new { @class = "form-control half-margin-bottom" } })
                    @Html.ValidationMessageFor(model => model.Appointment.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.EmailAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Appointment.EmailAddress, new { htmlAttributes = new { @class = "form-control half-margin-bottom" } })
                    @Html.ValidationMessageFor(model => model.Appointment.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.ProfessionalNotes, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Appointment.ProfessionalNotes, 3, 40, new { htmlAttributes = new { @class = "form-control half-margin-bottom width100pc" } })
                    @Html.ValidationMessageFor(model => model.Appointment.ProfessionalNotes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Appointment.IsCancelled, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.CheckBoxFor(model => model.Appointment.IsCancelled, new { htmlAttributes = new { @class = "form-control half-margin-bottom" } })
                    @Html.ValidationMessageFor(model => model.Appointment.IsCancelled, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div>
            <p id="serverErrorMsg" style="color:red; padding: 5px;"></p>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            <a class="btn btn-success btn-ok" id="apptsSubmitButton">Submit</a>
        </div>
    }

</div>


<script type="text/javascript">

    $("#apptsSubmitButton").click(function () {

        $.ajax({
            type: "POST",
            url: "@Url.Action("EditModal", "Scheduler")",
            data: $('#apptform').serialize(),
            success: function (result) {
                if (result == "success") {
                    $('#myApptModal').modal('hide');
                    //location.reload();
                    var proIdModal = $('#ddlProfessionalModal').find(":selected").val();
                    var dateToView = $('#tbStartTimeDate').val();

                    location.href = location.protocol + '//' + location.host + location.pathname + '?startDateString=""&activeDateString=' + dateToView + '&professionalIdString=' + proIdModal;

                } else {
                    $('#serverErrorMsg').html(result);
                }
            }
        });
    });



</script>
