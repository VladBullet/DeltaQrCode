@model DeltaQrCode.ViewModels.QrCodeContentViewModel;
<head>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>*@
    <script type="text/javascript" src="~/lib/Scripts/HeaderAlerts.js"></script>
    <script type="text/javascript" src="~/lib/Scripts/EncDec.js"></script>

</head>

@{
    if (User.Identity.IsAuthenticated)
    {
    <div class="text-center">
        <h1 class="display-4">Scaneaza Codul QR din masina</h1>
        <div class="panel-heading">
        </div>
    </div>
    <div id="HeaderAlert" class="alert" role="alert">
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <script src="https://rawgit.com/schmich/instascan-builds/master/instascan.min.js"></script>
                <div class="col-sm-12">
                    <video id="preview" class="p-1 border" style="width:100%;"></video>
                </div>
            </div>
        </div>
        <div class="row" style="margin:auto;">
            <div class="col">
                <div class="btn-group btn-group-lg btn-group-toggle mb-6" style="margin:auto;width:100%" data-toggle="buttons">
                    <button class="btn btn-lg btn-dark " id="CloseCameraBtn"> Camera Off </button>
                    <button class="btn btn-lg btn-warning" name="options" id="changeCameraBtn" value="1">Change Camera</button>
                    <button class="btn btn-lg btn-info" id="TurnOnCameraBtn"> Camera On </button>
                </div>
            </div>
        </div>
        <script type="text/javascript">

        var scanner = new Instascan.Scanner({ video: document.getElementById('preview'), scanPeriod: 5, mirror: false });
        scanner.addListener('scan', function (content) {
            var decr = Dec(content);
            var res = decr.split(",");
            array = [];
            array = array.concat(res);
            if (array.length < 3)
            {
                var res = content.split(",");
                array = [];
                array = array.concat(res);
            }

            if (array.length == 3 && res[0] == String(Math.PI)) {
                //close cameras
                CloseCameras();
                // open Modal
                $('#operationSelectionModal').modal({ backdrop: 'static', keyboard: false });
                 $('.selectionBtn').removeAttr('disabled');
                $("#modalDecodedCar").text("Masina: ").append(res[1]);
                $("#modalDecodedCo").text("Firma: ").append(res[2]);
                // wait for selection
                 var contentToSend = res[1].concat(", ").concat(res[2]);
                $('.selectionBtn').on('click', { content: contentToSend }, function () {
                    $('.selectionBtn').attr('disabled', 'true');
                    var value = $(this).val();
                    //alert("selectat" + content + value);
                    SendQrCodeDataAndSelectionAjax(contentToSend, value);
                });
            }
            else {
                TurnOnCameras();
                ShowHeaderAlert("Codul QR Scanat nu este bun. Asigura-te ca ai scanat codul din masina!","error",4000);
            }
        });

        var cams = Instascan.Camera.getCameras();
        function CloseCameras() {
            cams.then(function (cameras) {
                    scanner.stop(cameras[0]);
                    scanner.stop(cameras[1]);
                    $('#preview').hide();
                });
        };
        function TurnOnCameras() {
            cams.then(function (cameras) {
                $('#preview').show();
                if (cameras.length > 0 && cameras[0] != "") {
                    if (cameras.length > 1 && cameras[1] != "") {
                        scanner.start(cameras[1]);
                    }
                    else {
                        scanner.start(cameras[0]);
                    }
                }
            });
        };
        function ChangeCamera(cameraVal) {
            cams.then(function (cameras) {
                if (cameraVal == 1) {
                    if (cameras[0] != "") {
                        $('#preview').show();
                        scanner.start(cameras[0]);
                    } else {
                        alert('No Front camera found!');
                    }
                } else if (cameraVal == 2) {
                    if (cameras[1] != "") {
                        $('#preview').show();
                        scanner.start(cameras[1]);
                    } else {
                        alert('No Back camera found!');
                    }
                }
            });
        };
        // buttons event handlers
        $(document).ready(function () {

            $('[name="options"]').on('change', function () {
                ChangeCamera($(this).val());

            });
            $('#changeCameraBtn').on('click', function () {
                if ($(this).val() == 1) {
                    $(this).val(2);
                }
                else {
                    $(this).val(1);
                }
                 ChangeCamera($(this).val());
            });

            $('#CloseCameraBtn').on('click', function () {
                CloseCameras();
            });

            $('#TurnOnCameraBtn').on('click', function () {
                TurnOnCameras();
            });

        });
        cams.then(function (cameras) {
            if (cameras.length > 0) {
                if (cameras.length > 1) {
                    scanner.start(cameras[1]);
                }
                else {
                    scanner.start(cameras[0]);
                }

            }
            else {
                console.error('No cameras found.');
                alert('No cameras found.');
            }
        }).catch(function (e) {
            console.error(e);
        });

        function SendQrCodeDataAndSelectionAjax(qrCodeVal, selectionVal) {

            var model = {"QrCodeVal" : qrCodeVal, "Selection" : selectionVal,"DateTimeTicks" : $.now()};

            //AJAX CALL
            $.ajax({
                type: "POST",
                url: "@Url.Action("OperationSelection","QrCode")",
                dataType: "json",
                data: JSON.stringify(model),
                traditional: true,
                contentType: 'application/json',
                success: function (response) {
                    CloseSelectionModal();
                    ShowHeaderAlert(response,"success",3000);
                },
                error: function (error) {
                    CloseSelectionModal();
                    ShowHeaderAlert(error.responseJSON.Message, "error", 4000);

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("ErrorModal","Error")",
                        dataType: "text",
                        traditional: true,
                        contentType: 'application/json',
                        success: function (response) {
                            $("#GetModalCode").html(response);
                            $("#ErrorModal").modal('show');
                        },
                        error: function (error) {
                            alert(error);
                        }
                    });
                }
            });
        };

        function CloseSelectionModal() {
             $('#operationSelectionModal').modal('toggle');
        };

        </script>
    </div>
    <div id="GetModalCode"></div>
    <div class="modal fade" id="operationSelectionModal" tabindex="-1" role="dialog" aria-labelledby="operationSelectionModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="operationSelectionModalLongTitle">Selectati Operatiunea</h5>
                </div>
                <div class="modal-body">
                    <div class="text-center">
                        <h3 id="modalDecodedCar"></h3>
                        <h3 id="modalDecodedCo"></h3>
                    </div>
                    <div class="container" style="left:20%; right:20%; margin-top:5%">
                        <div class="row">
                            <div class="col-12 text-center">
                                <button type="button" id="BtnInterior" name="operations" value="1" class="selectionBtn btn btn-lg btn-danger" style="width: 70%; margin: 20px;">Interior</button>
                            </div>
                            <div class="col-12 text-center">
                                <button type="button" id="BtnExterior" name="operations" value="2" class="selectionBtn btn btn-lg btn-warning" style="width: 70%;margin: 20px;">Exterior</button>
                            </div>
                            <div class="col-12 text-center">
                                <button type="button" id="BtnIntExt" name="operations" value="3" class="selectionBtn btn btn-lg btn-success" style="width: 70%; margin: 20px;">Interior + Exterior</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    }
    else
    {
        <div class="container">
            <h3> Intra in cont pentru a putea utiliza aplicatia!</h3>
        </div>
    }
}
